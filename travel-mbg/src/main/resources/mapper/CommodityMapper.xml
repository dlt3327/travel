<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.it.mbg.mapper.CommodityMapper">
  <resultMap id="BaseResultMap" type="com.it.mbg.entity.Commodity">
    <id column="goods_id" jdbcType="BIGINT" property="goodsId" />
    <result column="goods_vol" jdbcType="DOUBLE" property="goodsVol" />
    <result column="goods_desc" jdbcType="VARCHAR" property="goodsDesc" />
    <result column="goods_weight" jdbcType="DOUBLE" property="goodsWeight" />
    <result column="goods_price" jdbcType="DOUBLE" property="goodsPrice" />
    <result column="goods_quantity" jdbcType="INTEGER" property="goodsQuantity" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="customer_order_id" jdbcType="BIGINT" property="customerOrderId" />
    <result column="goods_type" jdbcType="INTEGER" property="goodsType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    goods_id, goods_vol, goods_desc, goods_weight, goods_price, goods_quantity, goods_name, 
    customer_order_id, goods_type
  </sql>
  <select id="selectByExample" parameterType="com.it.mbg.entity.CommodityExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from commodity
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from commodity
    where goods_id = #{goodsId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from commodity
    where goods_id = #{goodsId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.it.mbg.entity.CommodityExample">
    delete from commodity
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.it.mbg.entity.Commodity">
    insert into commodity (goods_id, goods_vol, goods_desc, 
      goods_weight, goods_price, goods_quantity, 
      goods_name, customer_order_id, goods_type
      )
    values (#{goodsId,jdbcType=BIGINT}, #{goodsVol,jdbcType=DOUBLE}, #{goodsDesc,jdbcType=VARCHAR}, 
      #{goodsWeight,jdbcType=DOUBLE}, #{goodsPrice,jdbcType=DOUBLE}, #{goodsQuantity,jdbcType=INTEGER}, 
      #{goodsName,jdbcType=VARCHAR}, #{customerOrderId,jdbcType=BIGINT}, #{goodsType,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.it.mbg.entity.Commodity">
    insert into commodity
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="goodsVol != null">
        goods_vol,
      </if>
      <if test="goodsDesc != null">
        goods_desc,
      </if>
      <if test="goodsWeight != null">
        goods_weight,
      </if>
      <if test="goodsPrice != null">
        goods_price,
      </if>
      <if test="goodsQuantity != null">
        goods_quantity,
      </if>
      <if test="goodsName != null">
        goods_name,
      </if>
      <if test="customerOrderId != null">
        customer_order_id,
      </if>
      <if test="goodsType != null">
        goods_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goodsId != null">
        #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="goodsVol != null">
        #{goodsVol,jdbcType=DOUBLE},
      </if>
      <if test="goodsDesc != null">
        #{goodsDesc,jdbcType=VARCHAR},
      </if>
      <if test="goodsWeight != null">
        #{goodsWeight,jdbcType=DOUBLE},
      </if>
      <if test="goodsPrice != null">
        #{goodsPrice,jdbcType=DOUBLE},
      </if>
      <if test="goodsQuantity != null">
        #{goodsQuantity,jdbcType=INTEGER},
      </if>
      <if test="goodsName != null">
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="customerOrderId != null">
        #{customerOrderId,jdbcType=BIGINT},
      </if>
      <if test="goodsType != null">
        #{goodsType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.it.mbg.entity.CommodityExample" resultType="java.lang.Long">
    select count(*) from commodity
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update commodity
    <set>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=BIGINT},
      </if>
      <if test="record.goodsVol != null">
        goods_vol = #{record.goodsVol,jdbcType=DOUBLE},
      </if>
      <if test="record.goodsDesc != null">
        goods_desc = #{record.goodsDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsWeight != null">
        goods_weight = #{record.goodsWeight,jdbcType=DOUBLE},
      </if>
      <if test="record.goodsPrice != null">
        goods_price = #{record.goodsPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.goodsQuantity != null">
        goods_quantity = #{record.goodsQuantity,jdbcType=INTEGER},
      </if>
      <if test="record.goodsName != null">
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.customerOrderId != null">
        customer_order_id = #{record.customerOrderId,jdbcType=BIGINT},
      </if>
      <if test="record.goodsType != null">
        goods_type = #{record.goodsType,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update commodity
    set goods_id = #{record.goodsId,jdbcType=BIGINT},
      goods_vol = #{record.goodsVol,jdbcType=DOUBLE},
      goods_desc = #{record.goodsDesc,jdbcType=VARCHAR},
      goods_weight = #{record.goodsWeight,jdbcType=DOUBLE},
      goods_price = #{record.goodsPrice,jdbcType=DOUBLE},
      goods_quantity = #{record.goodsQuantity,jdbcType=INTEGER},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      customer_order_id = #{record.customerOrderId,jdbcType=BIGINT},
      goods_type = #{record.goodsType,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.it.mbg.entity.Commodity">
    update commodity
    <set>
      <if test="goodsVol != null">
        goods_vol = #{goodsVol,jdbcType=DOUBLE},
      </if>
      <if test="goodsDesc != null">
        goods_desc = #{goodsDesc,jdbcType=VARCHAR},
      </if>
      <if test="goodsWeight != null">
        goods_weight = #{goodsWeight,jdbcType=DOUBLE},
      </if>
      <if test="goodsPrice != null">
        goods_price = #{goodsPrice,jdbcType=DOUBLE},
      </if>
      <if test="goodsQuantity != null">
        goods_quantity = #{goodsQuantity,jdbcType=INTEGER},
      </if>
      <if test="goodsName != null">
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="customerOrderId != null">
        customer_order_id = #{customerOrderId,jdbcType=BIGINT},
      </if>
      <if test="goodsType != null">
        goods_type = #{goodsType,jdbcType=INTEGER},
      </if>
    </set>
    where goods_id = #{goodsId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.it.mbg.entity.Commodity">
    update commodity
    set goods_vol = #{goodsVol,jdbcType=DOUBLE},
      goods_desc = #{goodsDesc,jdbcType=VARCHAR},
      goods_weight = #{goodsWeight,jdbcType=DOUBLE},
      goods_price = #{goodsPrice,jdbcType=DOUBLE},
      goods_quantity = #{goodsQuantity,jdbcType=INTEGER},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      customer_order_id = #{customerOrderId,jdbcType=BIGINT},
      goods_type = #{goodsType,jdbcType=INTEGER}
    where goods_id = #{goodsId,jdbcType=BIGINT}
  </update>
</mapper>